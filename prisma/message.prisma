// model Community {
//     id          String  @id @default(auto()) @map("_id") @db.ObjectId
//     userId      String? @db.ObjectId
//     name        String
//     description String
//     image       String?
//     isDeleted   Boolean @default(false)

//     user User? @relation(fields: [userId], references: [id])

//     users     CommunityMembers[]
//     communityMessages CommunityMessage[]
//     createdAt DateTime           @default(now())
//     updatedAt DateTime           @updatedAt

//     @@map("community")
// }

// model CommunityMembers {
//     id          String @id @default(auto()) @map("_id") @db.ObjectId
//     userId      String? @db.ObjectId
//     communityId String @db.ObjectId

//     isMuted Boolean @default(false)
//     isLeft  Boolean @default(false)

//     user      User?      @relation(fields: [userId], references: [id])
//     community Community @relation(fields: [communityId], references: [id])

//     @@map("community_members")
// }

// model CommunityMessage {
//     id            String   @id @default(auto()) @map("_id") @db.ObjectId
//     communityId   String   @db.ObjectId
//     senderId      String   @db.ObjectId
//     message       String
//     isRead        Boolean  @default(false)
//     createdAt     DateTime @default(now())
//     updatedAt     DateTime @updatedAt

//     // Relations
//     community     Community             @relation(fields: [communityId], references: [id])
//     sender        User                  @relation(fields: [senderId], references: [id])
//     readStatuses  CommunityMessageReadStatus[]

//     @@map("community_messages")
// }

// model CommunityMessageReadStatus {
//     id        String   @id @default(auto()) @map("_id") @db.ObjectId
//     messageId String   @db.ObjectId
//     userId    String   @db.ObjectId
//     readAt    DateTime @default(now())

//     message   CommunityMessage @relation(fields: [messageId], references: [id])
//     user      User             @relation(fields: [userId], references: [id])

//     @@unique([messageId, userId])
//     @@map("community_message_read_status")
// }

// model Room {
//   id         String   @id @default(auto()) @map("_id") @db.ObjectId
//   senderId   String   @db.ObjectId
//   receiverId String   @db.ObjectId
//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt

//   //Relation
//   sender   User   @relation("RoomSender", fields: [senderId], references: [id])
//   receiver User   @relation("RoomReceiver", fields: [receiverId], references: [id])
//   chat     Chat[]

//   @@map("rooms")
// }

// model Chat {
//   id         String   @id @default(auto()) @map("_id") @db.ObjectId
//   senderId   String   @db.ObjectId
//   receiverId String   @db.ObjectId
//   roomId     String   @db.ObjectId
//   message    String
//   isRead     Boolean  @default(false)
//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt

//   //Relation
//   room Room @relation(fields: [roomId], references: [id])

//   @@map("chats")
// }

// model GroupRoom {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   name      String
//   createdBy String   @db.ObjectId
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   //Relations
//   members GroupMember[]
//   chats   GroupChat[]

//   @@map("groupRooms")
// }

// model GroupMember {
//   id       String   @id @default(auto()) @map("_id") @db.ObjectId
//   groupId  String   @db.ObjectId
//   userId   String   @db.ObjectId
//   role     String   @default("member") // member | admin
//   joinedAt DateTime @default(now())

//   // Relations
//   group GroupRoom @relation(fields: [groupId], references: [id])
//   user  User      @relation(fields: [userId], references: [id])

//   @@map("groupMembers")
// }

// model GroupChat {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   groupId   String   @db.ObjectId
//   senderId  String   @db.ObjectId
//   message   String
//   isRead    Boolean  @default(false)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   // Relations
//   group               GroupRoom             @relation(fields: [groupId], references: [id])
//   sender              User                  @relation(fields: [senderId], references: [id])
//   GroupChatReadStatus GroupChatReadStatus[]

//   @@map("groupChats")
// }

// model GroupChatReadStatus {
//   id     String   @id @default(auto()) @map("_id") @db.ObjectId
//   chatId String   @db.ObjectId
//   userId String   @db.ObjectId
//   readAt DateTime @default(now())

//   chat GroupChat @relation(fields: [chatId], references: [id])
//   user User      @relation(fields: [userId], references: [id])

//   @@unique([chatId, userId])
//   @@map("group_chat_read_status")
// }